#!/bin/sh

# Stop on error
set -e

# Constants
REPO=https://github.com/GloriousEggroll/proton-ge-custom
LATEST_RELEASE_URL=$REPO/releases/latest
PROTON_DIR=~/.steam/steam/compatibilitytools.d
restartSteam=2
autoInstall=false

# Find latest version tag
release_url=$(curl -Ls -o /dev/null -w %{url_effective} $LATEST_RELEASE_URL)
version=${release_url##*/}
echo Found latest version: $version

# Determine download URL and install path
download_url=https://github.com/GloriousEggroll/proton-ge-custom/releases/download/$version/Proton-$version.tar.gz
install_dir=$PROTON_DIR/Proton-$version
download_file=/tmp/Proton-$version.tar.gz

# Exit if already installed
if [ -d $install_dir ]; then
    echo Already installed at: $install_dir
    exit
fi

# Functions

InstallationPrompt() {
  if [ "$autoInstall" = true ]; then
    if [ ! -d "$PROTON_DIR"/Proton-"$version" ]; then
      InstallProtonGE
    fi
  else
    read -r -p "Do you want to try to download and (re)install this release? <y/N> " prompt
    if [[ $prompt == "y" || $prompt == "Y" || $prompt == "yes" || $prompt == "Yes" ]]; then
      InstallProtonGE
      Wanttodelete
    else
      echo "Operation canceled"
      Wanttodelete
    fi
  fi
}

InstallProtonGE() {
    echo Downloading...
    wget -q --show-progress $download_url -O $download_file

    echo Extracting...
    mkdir -p $PROTON_DIR
    tar -xzf $download_file --directory $PROTON_DIR

    echo Cleanup...
    rm $download_file
}

Wanttodelete() {
    read -r -p "Do you want to delete intalled versions? <y/N> " prompt
        if [[ $prompt == "y" || $prompt == "Y" || $prompt == "yes" || $prompt == "Yes" ]]; then
            DeleteProtonCheck
        else
            RestartSteamCheck
    fi
}

DeleteProtonCheck() {
    echo "Installed runners:"
    installed_versions=($(ls -d "$PROTON_DIR"/*/))
    for((i=0;i<${#installed_versions[@]};i++)); do
        inumber=$(("$i" + 1))
        folder=$(echo "${installed_versions[i]}" | rev | cut -d/ -f2 | rev)
        echo "$inumber. $folder"
    done
    echo ""
    echo -n "Please choose an option to remove [1-${#installed_versions[@]}]:"
    read -ra option_remove
    
    case "$option_remove" in
        [1-9])
        if (( $option_remove<= ${#installed_versions[@]} )); then
            remove_option=${installed_versions[$option_remove -1]}
            echo "removing $remove_option"
            DeleteProtonPrompt
        else
            echo "That is not a valid option"
        fi
        ;;
        *)
            echo "Not a valid option" 
        ;;
    esac
}

DeleteProtonPrompt() {
    read -r -p "Do you really want to permanently delete this version? <y/N> " prompt
    if [[ $prompt == "y" || $prompt == "Y" || $prompt == "yes" || $prompt == "Yes" ]]; then
      DeleteProton
    else
      echo "Operation canceled"
      Wanttodelete
    fi
}

DeleteProton() {
    rm -rf $remove_option
    echo "removed $remove_option"
    installComplete=true
    Wanttodelete
}

RestartSteam() {
  if [ "$( pgrep steam )" != "" ]; then
    echo "Restarting Steam"
    pkill -TERM steam #restarting Steam
    sleep 5s
    nohup steam </dev/null &>/dev/null &
  fi
}

RestartSteamCheck() {
  if [ "$( pgrep steam )" != "" ] && [ "$installComplete" = true ]; then
    if [ $restartSteam == 2 ]; then
      read -r -p "Do you want to restart Steam? <y/N> " prompt
      if [[ $prompt == "y" || $prompt == "Y" || $prompt == "yes" || $prompt == "Yes" ]]; then
        RestartSteam
      else
        exit 2
      fi
    elif [ $restartSteam == 0 ]; then
      exit 0
    fi
    RestartSteam
  fi
}

InstallationPrompt

echo Installation complete, at: $install_dir
